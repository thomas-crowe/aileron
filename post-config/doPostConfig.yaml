---

- hosts: localhost
  vars_files:
    - post-config.yaml

  tasks:

  - name: Create OpenStack Users
    loop: "{{ q('dict', users)  }}"
    os_user:
      cloud: "{{ osCluster }}"
      state: present
      name: "{{ item.key }}"
      password: "{{ item.value.password }}"
      email: "{{ item.value.email }}"
      domain: default

  - name: Create OpenStack Projects
    loop: "{{ q('items', projects)  }}"
    os_project:
      cloud: "{{ osCluster }}"
      state: present
      domain: default
      name: "{{ item }}"

  - name: Create OpenStack Role Assignments
    loop: "{{ q('items', roleAssignments)  }}"
    os_user_role:
      cloud: "{{ osCluster }}"
      user: "{{ item.user }}"
      project: "{{ item.project }}"
      role: "{{ item.role }}"

  - name: Configure OpenStack quotas
    loop: "{{ q('dict', quotas)  }}"
    os_quota:
      cloud: "{{ osCluster }}"
      name: "{{ item.key }}"
      backup_gigabytes: "{{ item.value.backupGigabytes }}"
      backups: "{{ item.value.backups }}"
      cores: "{{ item.value.cores }}"
      fixed_ips: "{{ item.value.fixedIps }}"
      floating_ips: "{{item.value.floatingIps }}"
      gigabytes: "{{ item.value.gigabytes }}"
      injected_file_size: "{{ item.value.injectedFileSize }}"
      injected_files: "{{ item.value.injectedFiles }}"
      injected_path_size: "{{ item.value.injectedPathSize }}"
      instances: "{{ item.value.instances }}"
      key_pairs: "{{item.value.keypairs }}"
      loadbalancer: "{{ item.value.loadbalancer }}"
      per_volume_gigabytes: "{{ item.value.perVolume }}"
      port: "{{ item.value.ports }}"
      ram: "{{ item.value.ram }}"
      security_group_rule: "{{ item.value.secgroupRules }}"
      security_group: "{{ item.value.secgroups }}"
      volumes: "{{ item.value.volumes }}"

  - name: Create OpenStack Images
    loop: "{{ q('dict', images)  }}"
    os_image:
      cloud: "{{ osCluster }}"
      state: present
      name: "{{ item.key }}"
      container_format: "{{ item.value.containerFormat | default('bare') }}"
      disk_format: "{{ item.value.diskFormat | default('raw') }}"
      min_disk: "{{ item.value.minDisk | default('0') }}"
      min_ram: "{{ item.value.minRam | default('0') }}"
      is_public: "{{ item.value.isPublic }}"
      filename: "{{ item.value.fileName }}"

  - name: Create OpenStack Flavors
    loop: "{{ q('dict', flavors)  }}"
    os_nova_flavor:
      cloud:  "{{ osCluster }}"
      state: present
      name: "{{ item.key }}"
      ram:  "{{ item.value.ram }}"
      vcpus: "{{ item.value.cpus }}"
      disk: "{{ item.value.disk | default('0') }}"
      ephemeral: "{{ item.value.ephemeral | default('0') }}"



